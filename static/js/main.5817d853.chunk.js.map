{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","robots","map","user","i","components_Card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","marginTop","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestRobots","_this$props","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_containers_App"],"mappings":"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","file":"static/js/main.5817d853.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../Card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc card\">\r\n            <img  src={`https://robohash.org/${id}?200x200`} alt=\"robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport '../CardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card\r\n                        key={robots[i].id}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                })\r\n            }\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport '../SearchBox.css';\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n    return (\r\n        <div>\r\n            <input\r\n                type='search'\r\n                placeholder='Search here'\r\n                className=\"pa3 ba b--light-blue bg-lightest-blue\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '800px', marginTop: '20px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Not good</h1>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css';\r\n\r\nimport { requestRobots, setSearchField } from \"../actions\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    // const [ robots, setRobots ] = useState([]);\r\n    // const [ searchField, setSearchField ] = useState('');\r\n    // const [ count, setCount ] = useState(0);\r\n    // constructor() {\r\n    //     super();\r\n    //     this.state = {\r\n    //         robots: [],\r\n    //         // searchField: ''\r\n    //     }\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //         .then(response => response.json())\r\n    //         .then(users => {setRobots(users)})\r\n    // }, [count])\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestRobots();\r\n        // fetch('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(response => response.json())\r\n        //     .then(users => this.setState({robots: users})\r\n        // )\r\n    }\r\n\r\n    // const onSearchChange = event => {\r\n    //     setSearchField(event.target.value);\r\n    // }\r\n\r\n    render() {\r\n        const { searchField, onSearchChange, robots, isPending } = this.props;\r\n        const filteredRobots = robots.filter(robot => {\r\n        return robot.name\r\n            .toLowerCase()\r\n            .includes(searchField.toLowerCase())\r\n    })\r\n\r\n    return isPending ?\r\n        <h1 className=\"f2 neonText\">Loading...</h1> :\r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f2 neonText\">RoboFriends</h1>\r\n                <SearchBox searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n//check","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\";\r\n\r\nexport const setSearchField = text => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n            .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, { searchField: action.payload })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true })\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false })\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport { searchRobots, requestRobots } from './reducers';\r\n\r\nconst logger = createLogger();\r\n\r\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={store} >\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n  \t</React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}